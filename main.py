from telegram import Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, JobQueue, CallbackQueryHandler
import requests
import logging

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7742580858:AAHWJYFLcIRGy01oEBhnKjjEy213ugcPtl0"
TGSTAT_API_TOKEN = "57399d94051368c10a651fad5f050843"

CATEGORIES = {
    "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–µ–∫–ª–∞–º–∞": [
        ("FULLSTATS", "@fullstats"),
        ("–•–æ–≥–≤–∞—Ä—Ç—Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤", "@mp_hogwarts"),
        ("–†–µ–∫–ª–∞–º–∞ –∏ –≤–Ω–µ—à–Ω–∏–µ –∫–∞–Ω–∞–ª—ã", "@ads_wb")
    ],
    "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ–∞–π–ª—ã": [
        ("–°–µ–º—å—è –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö", "@familymp"),
        ("Market Guru WB", "@marketguru_wb"),
        ("–Ω–∏–∫–∞–∫–æ–π –º–∞–≥–∏–∏", "@homichwb"),
        ("WildCRM", "@wildcrm")
    ],
    "–õ–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏ –±–ª–æ–≥–∏–Ω–≥": [
        ("–†—ã–∂–∏–π –ú", "@ryzhiy_market"),
        ("–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ë–æ—Å—Å", "@mp_boss"),
        ("–†–∏—Ç–µ–π–ª –ú–∞–º–∞", "@retailmama")
    ]
}

KEYWORDS = ["—Ç–∞–±–ª–∏—Ü–∞", "–≥–∞–π–¥", "–ª–∞–π—Ñ—Ö–∞–∫", "–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "–æ—à–∏–±–∫–∞", "–Ω–æ–≤–æ–µ", "–≤–∞–∂–Ω–æ"]

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# === –ö–û–ú–ê–ù–î–´ ===
def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–µ–∫–ª–∞–º–∞", callback_data='ads')],
        [InlineKeyboardButton("–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ–∞–π–ª—ã", callback_data='files')],
        [InlineKeyboardButton("–õ–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏ –±–ª–æ–≥–∏–Ω–≥", callback_data='blog')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π:", reply_markup=reply_markup)

def button(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    category_map = {
        'ads': "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–µ–∫–ª–∞–º–∞",
        'files': "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ–∞–π–ª—ã",
        'blog': "–õ–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏ –±–ª–æ–≥–∏–Ω–≥"
    }
    category = category_map.get(query.data)
    messages = fetch_category_posts(category) if category else ["–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä."]

    for msg in messages:
        query.message.reply_text(msg)

def fetch_category_posts(category):
    messages = []
    for name, channel in CATEGORIES.get(category, []):
        try:
            url = f"https://api.tgstat.ru/channels/posts?token={TGSTAT_API_TOKEN}&channel={channel}&limit=3"
            res = requests.get(url)
            data = res.json()
            for post in data.get("items", []):
                text = post.get("text", "")
                link = post.get("url", "")
                if any(k in text.lower() for k in KEYWORDS):
                    messages.append(f"üîπ {name}:
{text[:300]}...
{link}")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤ –∏–∑ {name}: {e}")
    return messages if messages else ["–ù–µ—Ç —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π."]

def news(update: Update, context: CallbackContext):
    start(update, context)

def scheduled_job(context: CallbackContext):
    chat_id = context.job.context
    for category in CATEGORIES:
        messages = fetch_category_posts(category)
        for msg in messages:
            context.bot.send_message(chat_id=chat_id, text=msg)

def subscribe(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    context.job_queue.run_repeating(scheduled_job, interval=3600, first=0, context=chat_id)
    update.message.reply_text("–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π –∫–∞–∂–¥—ã–π —á–∞—Å.")

def help_command(update: Update, context: CallbackContext):
    update.message.reply_text(
        "/start ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
"
        "/news ‚Äî –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
"
        "/subscribe ‚Äî –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
"
        "/help ‚Äî –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

# === –ó–ê–ü–£–°–ö ===
def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("news", news))
    dp.add_handler(CommandHandler("subscribe", subscribe))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CallbackQueryHandler(button))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()